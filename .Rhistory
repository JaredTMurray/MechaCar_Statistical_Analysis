# Part I
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for(s in students){
print(s)
}
}
students <- c("Abraham","Beatrice","Cory","Dinah","Eric","Felicia")
roll_call <- function(class){
print(Sys.Date())
# Create a for loop
for(s in class){
print(s)
}
}
# Call the function with the student vector as an argument.
roll_call(students)
locker_combinations <- function(class){
for(student in class){
combination=sample(33,3)
print(student)
print(combination)
}
# Create the for loop and print the student name and locker combination.
}
locker_combinations(students)
for (student in students){
# Create a variable (substring)  that holds the second letter for each student.
second_letter <- substr(student,2,2)
# Create an if statement to find the names of students where the
# second letter that is an "e".
if (second_letter == 'e'){
print(student)
combination <- sample(33,66,3)
print(combination)
}
}
library()dbplyr
library()
dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
?read.csv()
?read.csv()
MechaCar_dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
MechaCar_dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
setwd("C:/Users/Jared/Module16/MechaCar_Statistical_Analysis")
MechaCar_dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F)
library(dbplyr)
colClasses = c("numeric", "numeric", "numeric","numeric", "numeric", "numeric"))
MechaCar_dataFrame <- read.csv(file='MechaCar_mpg.csv',check.names=F,stringsAsFactors = F, colClasses = c("numeric", "numeric", "numeric","numeric", "numeric", "numeric"))
library(dbplyr)
multi.fit = lm(mpg~AWD+ground_clearance+spoiler_angle+vehicle_weight+vehicle_length, data=MechaCar_dataFrame)
summary(multi.fit)
View(multi.fit)
View(MechaCar_dataFrame)
suspension_table <- read.csv(file='Suspension_Coil.csv', colClasses =c("numeric","character","character") )
suspension_table <- read.csv(file='Suspension_Coil.csv',check.names = F,stringsAsFactors = F, colClasses =c("numeric","character","character") )
suspension_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F, colClasses =c("numeric","raw","raw") )
suspension_table <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
?summary()
?aov()
?summary(suspension_table)
View(suspension_table)
total_summary <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
summary(table_summary)
summary(total_summary)
View(total_summary)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI(PSI), .groups = 'keep') #create summary table
setwd("C:/Users/Jared/Module16/R_Analysis")
demo_table[3,"Year"]
demo_table[3,"Year"]
demo_table2 <- fromJSON(txt='demo.json')
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
?fromJSON()
demo_table2 <- fromJSON(txt='demo.json')
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
demo_table[3,"Year"]
demo_table[3,3]
demo_table$"Vehicle_Class"
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
?subset()
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(demo_table2)
View(demo_table2)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer),Maximum_Price=max(price),Num_Vehicles=n(), .groups = 'keep') #create summary table with multiple columns
setwd("C:/Users/Jared/Module16/MechaCar_Statistical_Analysis")
library(tidyverse)
total_summary <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
summary(total_summary)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI(PSI), .groups = 'keep') #create summary table
View(total_summary)
View(summarize_demo)
View(summarize_demo)
View(filter_table2)
View(demo_table2)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI(PSI), .groups = 'keep')
lot_summary <- total_summary %>% group_by(Manufacturing_Lot)) #create summary table
View(demo_table)
View(total_summary)
View(demo_table2)
View(summarize_demo)
View(summarize_demo)
coils_summary <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
library(tidyverse)
total_summary = lm(PSI~Manufacturing_Lot+VehicleID, data=coils_summary)
summary(total_summary)
total_summary <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
View(total_summary)
library(tidyverse)
summary(total_summary)
create summary table with multiple columns
#create summary table with multiple columns
lot_summary <- total_summary %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=n(),SD_PSI=sd(PSI) .groups = 'keep')
View(total_summary)
lot_summary <- total_summary %>% group_by(Manufacturing_Lot) %>% summarize(Mean_PSI=mean(PSI),Median_PSI=median(PSI),Variance_PSI=var(PSI),sd_PSI = sqrt(var(PSI)) .groups = 'keep')
Mean_PSI <- mean(total_summary$PSI)
Median_PSI <- median(total_summary$PSI)
Variance_PSI <- var(total_summary$PSI)
SD_PSI <- sqrt(var(total_summary$PSI))
View(filter_table2)
View(filter_table)
View(demo_table)
coilsTotal_summary <- read.csv(file='Suspension_Coil.csv',check.names=F,stringsAsFactors = F )
library(tidyverse)
summary(coilsTotal_summary)
#create summary table with multiple columns
Mean_PSI <- mean(coilsTotal_summary$PSI)
Median_PSI <- median(coilsTotal_summary$PSI)
Variance_PSI <- var(coilsTotal_summary$PSI)
SD_PSI <- sqrt(var(coilsTotal_summary$PSI))
# Create the total_summary data frame.
total_summary <- data.frame(
Mean= c (Mean_PSI),
Median = c(Median_PSI),
Variance = c(Variance_PSI),
SD =c(SD_PSI),
stringsAsFactors = FALSE
)
# Print the data frame.
print(total_summary)
# Print the data frame.
summary(total_summary)
View(total_summary)
View(suspension_table)
View(summarize_demo)
lot_summary <- suspension_table %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),sd = sqrt(var(PSI)) .groups = 'keep')
?group_by()
lot_summary <- suspension_table %>% group_by(Manufacturing_Lot) %>% summarise(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),sd = sqrt(var(PSI)) .groups = 'keep')
lot_summary <- suspension_table %>% group_by(Manufacturing_Lot) %>% summarise(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD = sqrt(var(PSI)), .groups = 'keep')
View(lot_summary)
View(lot_summary)
?t.test()
plot(extra ~ Manufacturing_Lot, data = lot_summary )
## Classical example: Student's sleep data
plot(Manufacturing_Lot ~ Mean , data = lot_summary )
?t.test()
?t.test()
## Traditional interface
with(lot_summary, t.test(Mean[Manufacturing_Lot == 1], Median[Manufacturing_Lot == 2], Variance[Manufacturing_Lot] ==3, SD[Manufacturing_Lot] == 4))
## Traditional interface
with(lot_summary, t.test(Mean[Manufacturing_Lot == Lot1], Median[Manufacturing_Lot == Lot2], Variance[Manufacturing_Lot] == Lot3))
View(filter_table2)
View(suspension_table)
~
sample_table <- suspension_table %>% sample_n(10) #randomly sample 10 data points
sample_table <- suspension_table %>% sample_n(10)
sample_table2 <- suspension_table %>% sample_n(10)
t.test(log10(sample_table$PSI),log10(sample_table2$PSI))
View(sample_table)
View(sample_table2)
View(sample_table)
View(suspension_table)
